name: Tests
on: push
jobs:
  elixir:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ex_venture_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-elixir@v1.0.0
      with:
        otp-version: "23.0.3"
        elixir-version: "1.10.4"
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential
    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Setup elixir
      run: |
        mix deps.get
        mix compile
      env:
        MIX_ENV: test
    - name: Verify application
      run: |
        mix format --check-formatted
        mix compile --force --warnings-as-errors
        mix credo
        mix test
      env:
        MIX_ENV: test

  javascript:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: assets
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential
    - name: Setup node
      run: |
        npm install -g yarn
        yarn install
    - name: Verify application
      run: |
        yarn lint:ci
        yarn jest

  dispatch:
    runs-on: ubuntu-latest
    needs: [elixir, javascript]
    steps:
    - uses: actions/checkout@v1
    - name: Repository Dispatch
      if: github.ref == 'refs/heads/kalevala'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        event-type: main-branch-passed
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
